--- split/split.c.orig	2021-04-09 02:24:12.000000000 +0200
+++ split/split.c	2021-06-12 06:22:35.160172428 +0200
@@ -51,7 +51,6 @@ static const char sccsid[] = "@(#)split.
 #include <errno.h>
 #include <fcntl.h>
 #include <inttypes.h>
-#include <libutil.h>
 #include <limits.h>
 #include <locale.h>
 #include <stdbool.h>
@@ -63,6 +62,8 @@ static const char sccsid[] = "@(#)split.
 #include <regex.h>
 #include <sysexits.h>
 
+#include "compat.h"
+
 #define DEFLINE	1000			/* Default num lines per file. */
 
 static off_t	 bytecnt;		/* Byte count to split on. */
@@ -89,6 +90,7 @@ main(int argc, char **argv)
 	int ch;
 	int error;
 	char *ep, *p;
+	uint64_t ubytecnt;
 
 	setlocale(LC_ALL, "");
 
@@ -120,7 +122,8 @@ main(int argc, char **argv)
 			break;
 		case 'b':		/* Byte count. */
 			errno = 0;
-			error = expand_number(optarg, &bytecnt);
+			ubytecnt = bytecnt;
+			error = expand_number(optarg, &ubytecnt);
 			if (error == -1)
 				errx(EX_USAGE, "%s: offset too large", optarg);
 			break;
@@ -161,9 +164,10 @@ main(int argc, char **argv)
 			err(EX_NOINPUT, "%s", *argv);
 		++argv;
 	}
-	if (*argv != NULL)			/* File name prefix. */
-		if (strlcpy(fname, *argv++, sizeof(fname)) >= sizeof(fname))
-			errx(EX_USAGE, "file name prefix is too long");
+	if (*argv != NULL) {			/* File name prefix. */
+		strncpy(fname, *argv++, sizeof(fname));
+		fname[sizeof(fname) - 1] = '\0';
+	}
 	if (*argv != NULL)
 		usage();
 
