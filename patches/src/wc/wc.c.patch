--- wc/wc.c.orig	2021-04-09 02:24:13.000000000 +0200
+++ wc/wc.c	2021-06-27 19:59:32.817675066 +0200
@@ -44,16 +44,16 @@ static char sccsid[] = "@(#)wc.c	8.1 (Be
 #include <sys/cdefs.h>
 __FBSDID("$FreeBSD$");
 
-#include <sys/capsicum.h>
 #include <sys/param.h>
 #include <sys/stat.h>
+#include <sys/types.h>
 
-#include <capsicum_helpers.h>
 #include <ctype.h>
 #include <err.h>
 #include <errno.h>
 #include <fcntl.h>
 #include <locale.h>
+#include <signal.h>
 #include <stdint.h>
 #include <stdio.h>
 #include <stdlib.h>
@@ -63,10 +63,8 @@ __FBSDID("$FreeBSD$");
 #include <wctype.h>
 #include <libxo/xo.h>
 
-#include <libcasper.h>
-#include <casper/cap_fileargs.h>
+#include "compat.h"
 
-static fileargs_t *fa;
 static uintmax_t tlinect, twordct, tcharct, tlongline;
 static int doline, doword, dochar, domulti, dolongline;
 static volatile sig_atomic_t siginfo;
@@ -78,17 +76,9 @@ static int	cnt(const char *);
 static void	usage(void);
 
 static void
-siginfo_handler(int sig __unused)
-{
-
-	siginfo = 1;
-}
-
-static void
 reset_siginfo(void)
 {
 
-	signal(SIGINFO, SIG_DFL);
 	siginfo = 0;
 }
 
@@ -96,7 +86,6 @@ int
 main(int argc, char *argv[])
 {
 	int ch, errors, total;
-	cap_rights_t rights;
 
 	(void) setlocale(LC_CTYPE, "");
 
@@ -130,28 +119,6 @@ main(int argc, char *argv[])
 	argv += optind;
 	argc -= optind;
 
-	(void)signal(SIGINFO, siginfo_handler);
-
-	fa = fileargs_init(argc, argv, O_RDONLY, 0,
-	    cap_rights_init(&rights, CAP_READ, CAP_FSTAT), FA_OPEN);
-	if (fa == NULL) {
-		xo_warn("Unable to init casper");
-		exit(1);
-	}
-
-	caph_cache_catpages();
-	if (caph_limit_stdio() < 0) {
-		xo_warn("Unable to limit stdio");
-		fileargs_free(fa);
-		exit(1);
-	}
-
-	if (caph_enter_casper() < 0) {
-		xo_warn("Unable to enter capability mode");
-		fileargs_free(fa);
-		exit(1);
-	}
-
 	/* Wc's flags are on by default. */
 	if (doline + doword + dochar + domulti + dolongline == 0)
 		doline = doword = dochar = 1;
@@ -185,7 +152,6 @@ main(int argc, char *argv[])
 		xo_close_container("total");
 	}
 
-	fileargs_free(fa);
 	xo_close_container("wc");
 	xo_finish();
 	exit(errors == 0 ? 0 : 1);
@@ -234,7 +200,7 @@ cnt(const char *file)
 	linect = wordct = charct = llct = tmpll = 0;
 	if (file == NULL)
 		fd = STDIN_FILENO;
-	else if ((fd = fileargs_open(fa, file)) < 0) {
+	else if ((fd = open(file, O_RDONLY, 0)) < 0) {
 		xo_warn("%s: open", file);
 		return (1);
 	}
@@ -313,7 +279,7 @@ word:	gotsp = 1;
 			if (!domulti || MB_CUR_MAX == 1) {
 				clen = 1;
 				wch = (unsigned char)*p;
-			} else if ((clen = mbrtowc(&wch, p, len, &mbs)) ==
+			} else if ((clen = mbrtowc(&wch, (char *)p, len, &mbs)) ==
 			    (size_t)-1) {
 				if (!warned) {
 					errno = EILSEQ;
