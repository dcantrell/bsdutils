--- stat/stat.c.orig	2021-04-09 02:24:12.000000000 +0200
+++ stat/stat.c	2021-06-12 06:22:35.164172032 +0200
@@ -42,17 +42,18 @@ __FBSDID("$FreeBSD$");
 #if HAVE_CONFIG_H
 #include "config.h" 
 #else  /* HAVE_CONFIG_H */
-#define HAVE_STRUCT_STAT_ST_FLAGS 1
-#define HAVE_STRUCT_STAT_ST_GEN 1
-#define HAVE_STRUCT_STAT_ST_BIRTHTIME 1
+#define HAVE_STRUCT_STAT_ST_FLAGS 0
+#define HAVE_STRUCT_STAT_ST_GEN 0
+#define HAVE_STRUCT_STAT_ST_BIRTHTIME 0
 #define HAVE_STRUCT_STAT_ST_MTIMENSEC 1
-#define HAVE_DEVNAME 1
+#define HAVE_DEVNAME 0
 #endif /* HAVE_CONFIG_H */
 
 #include <sys/param.h>
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <sys/mount.h>
+#include <sys/sysmacros.h>
 
 #include <ctype.h>
 #include <err.h>
@@ -67,6 +68,10 @@ __FBSDID("$FreeBSD$");
 #include <time.h>
 #include <unistd.h>
 
+#include "compat.h"
+
+extern char *__progname;
+
 #if HAVE_STRUCT_STAT_ST_FLAGS
 #define DEF_F "%#Xf "
 #define RAW_F "%f "
@@ -208,24 +213,21 @@ main(int argc, char *argv[])
 {
 	struct stat st;
 	int ch, rc, errs, am_readlink;
-	int lsF, fmtchar, usestat, nfs_handle, fn, nonl, quiet;
+	int lsF, fmtchar, usestat, fn, nonl, quiet;
 	const char *statfmt, *options, *synopsis;
-	char dname[sizeof _PATH_DEV + SPECNAMELEN] = _PATH_DEV;
-	fhandle_t fhnd;
 	const char *file;
 
 	am_readlink = 0;
 	lsF = 0;
 	fmtchar = '\0';
 	usestat = 0;
-	nfs_handle = 0;
 	nonl = 0;
 	quiet = 0;
 	linkfail = 0;
 	statfmt = NULL;
 	timefmt = NULL;
 
-	if (strcmp(getprogname(), "readlink") == 0) {
+	if (strcmp(__progname, "readlink") == 0) {
 		am_readlink = 1;
 		options = "fn";
 		synopsis = "[-fn] [file ...]";
@@ -233,7 +235,7 @@ main(int argc, char *argv[])
 		fmtchar = 'f';
 		quiet = 1;
 	} else {
-		options = "f:FHlLnqrst:x";
+		options = "f:FlLnqrst:x";
 		synopsis = "[-FLnq] [-f format | -l | -r | -s | -x] "
 		    "[-t timefmt] [file|handle ...]";
 	}
@@ -243,9 +245,6 @@ main(int argc, char *argv[])
 		case 'F':
 			lsF = 1;
 			break;
-                case 'H':
-			nfs_handle = 1;
-			break;
 		case 'L':
 			usestat = 1;
 			break;
@@ -323,37 +322,11 @@ main(int argc, char *argv[])
 	errs = 0;
 	do {
 		if (argc == 0) {
-			if (fdevname_r(STDIN_FILENO, dname +
-			    sizeof _PATH_DEV - 1, SPECNAMELEN) != NULL)
-				file = dname;
-			else
-				file = "(stdin)";
+			file = "(stdin)";
 			rc = fstat(STDIN_FILENO, &st);
 		} else {
-			int j;
-
 			file = argv[0];
-			if (nfs_handle) {
-				rc = 0;
-				bzero(&fhnd, sizeof(fhnd));
-				j = MIN(2 * sizeof(fhnd), strlen(file));
-				if ((j & 1) != 0) {
-					rc = -1;
-				} else {
-					while (j) {
-						rc = hex2byte(&file[j - 2]);
-						if (rc == -1)
-							break;
-						((char*) &fhnd)[j / 2 - 1] = rc;
-						j -= 2;
-					}
-				}
-				if (rc == -1)
-					errno = EINVAL;
-				else
-					rc = fhstat(&fhnd, &st);
-
-			} else if (usestat) {
+			if (usestat) {
 				/*
 				 * Try stat() and if it fails, fall back to
 				 * lstat() just in case we're examining a
@@ -408,7 +381,7 @@ void
 usage(const char *synopsis)
 {
 
-	(void)fprintf(stderr, "usage: %s %s\n", getprogname(), synopsis);
+	(void)fprintf(stderr, "usage: %s %s\n", __progname, synopsis);
 	exit(1);
 }
 
@@ -618,8 +591,10 @@ format1(const struct stat *st,
 {
 	u_int64_t data;
 	char *stmp, lfmt[24], tmp[20];
-	const char *sdata;
-	char smode[12], sid[12], path[PATH_MAX + 4];
+	struct passwd *pw = NULL;
+	struct group *gr = NULL;
+	const char *sdata = NULL;
+	char smode[12], sid[13], path[PATH_MAX + 4];
 	const struct timespec *tsp;
 	struct timespec ts;
 	struct tm *tm;
@@ -716,10 +691,12 @@ format1(const struct stat *st,
 	case SHOW_st_uid:
 		small = (sizeof(st->st_uid) == 4);
 		data = st->st_uid;
-		sdata = user_from_uid(st->st_uid, 1);
-		if (sdata == NULL) {
+		pw = getpwuid(st->st_uid);
+		if (pw == NULL) {
 			snprintf(sid, sizeof(sid), "(%ld)", (long)st->st_uid);
 			sdata = sid;
+		} else {
+			sdata = pw->pw_name;
 		}
 		formats = FMTF_DECIMAL | FMTF_OCTAL | FMTF_UNSIGNED | FMTF_HEX |
 		    FMTF_STRING;
@@ -729,10 +706,12 @@ format1(const struct stat *st,
 	case SHOW_st_gid:
 		small = (sizeof(st->st_gid) == 4);
 		data = st->st_gid;
-		sdata = group_from_gid(st->st_gid, 1);
-		if (sdata == NULL) {
+		gr = getgrgid(st->st_gid);
+		if (gr == NULL) {
 			snprintf(sid, sizeof(sid), "(%ld)", (long)st->st_gid);
 			sdata = sid;
+		} else {
+			sdata = gr->gr_name;
 		}
 		formats = FMTF_DECIMAL | FMTF_OCTAL | FMTF_UNSIGNED | FMTF_HEX |
 		    FMTF_STRING;
@@ -740,15 +719,15 @@ format1(const struct stat *st,
 			ofmt = FMTF_UNSIGNED;
 		break;
 	case SHOW_st_atime:
-		tsp = &st->st_atimespec;
+		tsp = &st->st_atim;
 		/* FALLTHROUGH */
 	case SHOW_st_mtime:
 		if (tsp == NULL)
-			tsp = &st->st_mtimespec;
+			tsp = &st->st_mtim;
 		/* FALLTHROUGH */
 	case SHOW_st_ctime:
 		if (tsp == NULL)
-			tsp = &st->st_ctimespec;
+			tsp = &st->st_ctim;
 		/* FALLTHROUGH */
 #if HAVE_STRUCT_STAT_ST_BIRTHTIME
 	case SHOW_st_btime:
@@ -821,7 +800,8 @@ format1(const struct stat *st,
 		small = 0;
 		data = 0;
 		if (file == NULL) {
-			(void)strlcpy(path, "(stdin)", sizeof(path));
+			(void)strncpy(path, "(stdin)", sizeof(path));
+			path[sizeof(path) - 1] = '\0';
 			sdata = path;
 		} else {
 			snprintf(path, sizeof(path), " -> ");
@@ -909,7 +889,8 @@ format1(const struct stat *st,
 	case SHOW_filename:
 		small = 0;
 		data = 0;
-		(void)strlcpy(path, file, sizeof(path));
+		(void)strncpy(path, file, sizeof(path));
+		path[sizeof(path) - 1] = '\0';
 		sdata = path;
 		formats = FMTF_STRING;
 		if (ofmt == 0)
@@ -1091,7 +1072,7 @@ format1(const struct stat *st,
 #define hex2nibble(c) (c <= '9' ? c - '0' : toupper(c) - 'A' + 10)
 int
 hex2byte(const char c[2]) {
-	if (!(ishexnumber(c[0]) && ishexnumber(c[1])))
+	if (!(isxdigit(c[0]) && isxdigit(c[1])))
 		return -1;
 	return (hex2nibble(c[0]) << 4) + hex2nibble(c[1]);
 }
