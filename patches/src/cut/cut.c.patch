--- cut/cut.c.orig	2021-04-09 02:24:12.000000000 +0200
+++ cut/cut.c	2021-06-12 06:47:02.271086318 +0200
@@ -241,7 +241,7 @@ needpos(size_t n)
 }
 
 static int
-b_cut(FILE *fp, const char *fname __unused)
+b_cut(FILE *fp, const char *fname __attribute__((unused)))
 {
 	int ch, col;
 	char *pos;
@@ -277,14 +277,14 @@ b_cut(FILE *fp, const char *fname __unus
 static int
 b_n_cut(FILE *fp, const char *fname)
 {
-	size_t col, i, lbuflen;
-	char *lbuf;
+	size_t col, i, lbuflen = 0;
+	char *lbuf = NULL;
 	int canwrite, clen, warned;
 	mbstate_t mbs;
 
 	memset(&mbs, 0, sizeof(mbs));
 	warned = 0;
-	while ((lbuf = fgetln(fp, &lbuflen)) != NULL) {
+	while (getline(&lbuf, &lbuflen, fp) != -1) {
 		for (col = 0; lbuflen > 0; col += clen) {
 			if ((clen = mbrlen(lbuf, lbuflen, &mbs)) < 0) {
 				if (!warned) {
@@ -391,11 +391,11 @@ f_cut(FILE *fp, const char *fname)
 	int field, i, isdelim;
 	char *pos, *p;
 	int output;
-	char *lbuf, *mlbuf;
-	size_t clen, lbuflen, reallen;
+	char *lbuf = NULL, *mlbuf;
+	size_t clen, lbuflen = 0, reallen;
 
 	mlbuf = NULL;
-	while ((lbuf = fgetln(fp, &lbuflen)) != NULL) {
+	while (getline(&lbuf, &lbuflen, fp) != -1) {
 		reallen = lbuflen;
 		/* Assert EOL has a newline. */
 		if (*(lbuf + lbuflen - 1) != '\n') {
@@ -412,7 +412,8 @@ f_cut(FILE *fp, const char *fname)
 		for (isdelim = 0, p = lbuf;; p += clen) {
 			clen = mbrtowc(&ch, p, lbuf + reallen - p, NULL);
 			if (clen == (size_t)-1 || clen == (size_t)-2) {
-				warnc(EILSEQ, "%s", fname);
+				errno = EILSEQ;
+				warn("%s", fname);
 				free(mlbuf);
 				return (1);
 			}
@@ -439,7 +440,8 @@ f_cut(FILE *fp, const char *fname)
 				clen = mbrtowc(&ch, p, lbuf + reallen - p,
 				    NULL);
 				if (clen == (size_t)-1 || clen == (size_t)-2) {
-					warnc(EILSEQ, "%s", fname);
+					errno = EILSEQ;
+					warn("%s", fname);
 					free(mlbuf);
 					return (1);
 				}
