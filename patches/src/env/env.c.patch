--- env/env.c.orig	2021-04-09 02:24:12.000000000 +0200
+++ env/env.c	2021-06-12 06:22:35.052183107 +0200
@@ -42,13 +42,11 @@ static char sccsid[] = "@(#)env.c	8.3 (B
 #endif
 
 #include <sys/cdefs.h>
-__FBSDID("$FreeBSD$");
 
 #include <sys/types.h>
 
 #include <err.h>
 #include <errno.h>
-#include <login_cap.h>
 #include <pwd.h>
 #include <stdbool.h>
 #include <stdio.h>
@@ -76,23 +74,18 @@ main(int argc, char **argv)
 {
 	char *altpath, **ep, *p, **parg, term;
 	char *cleanenv[1];
-	char *login_class, *login_name;
+	char *login_name;
 	struct passwd *pw;
-	login_cap_t *lc;
-	bool login_as_user;
 	uid_t uid;
 	int ch, want_clear;
 	int rtrn;
 
 	altpath = NULL;
-	login_class = NULL;
 	login_name = NULL;
 	pw = NULL;
-	lc = NULL;
-	login_as_user = false;
 	want_clear = 0;
 	term = '\n';
-	while ((ch = getopt(argc, argv, "-0iL:P:S:U:u:v")) != -1)
+	while ((ch = getopt(argc, argv, "-0iP:S:u:v")) != -1)
 		switch(ch) {
 		case '-':
 		case 'i':
@@ -101,12 +94,6 @@ main(int argc, char **argv)
 		case '0':
 			term = '\0';
 			break;
-		case 'U':
-			login_as_user = true;
-			/* FALLTHROUGH */
-		case 'L':
-			login_name = optarg;
-			break;
 		case 'P':
 			altpath = strdup(optarg);
 			break;
@@ -141,9 +128,6 @@ main(int argc, char **argv)
 			fprintf(stderr, "#env clearing environ\n");
 	}
 	if (login_name != NULL) {
-		login_class = strchr(login_name, '/');
-		if (login_class)
-			*login_class++ = '\0';
 		if (*login_name != '\0' && strcmp(login_name, "-") != 0) {
 			pw = getpwnam(login_name);
 			if (pw == NULL) {
@@ -156,38 +140,8 @@ main(int argc, char **argv)
 			if (pw == NULL)
 				errx(EXIT_FAILURE, "no such user: %s", login_name);
 		}
-		/*
-		 * Note that it is safe for pw to be null here; the libutil
-		 * code handles that, bypassing substitution of $ and using
-		 * the class "default" if no class name is given either.
-		 */
-		if (login_class != NULL) {
-			lc = login_getclass(login_class);
-			if (lc == NULL)
-				errx(EXIT_FAILURE, "no such login class: %s",
-				    login_class);
-		} else {
-			lc = login_getpwclass(pw);
-			if (lc == NULL)
-				errx(EXIT_FAILURE, "login_getpwclass failed");
-		}
 
-		/*
-		 * This is not done with setusercontext() because that will
-		 * try and use ~/.login_conf even when we don't want it to.
-		 */
-		setclassenvironment(lc, pw, 1);
-		setclassenvironment(lc, pw, 0);
-		if (login_as_user) {
-			login_close(lc);
-			if ((lc = login_getuserclass(pw)) != NULL) {
-				setclassenvironment(lc, pw, 1);
-				setclassenvironment(lc, pw, 0);
-			}
-		}
 		endpwent();
-		if (lc != NULL)
-			login_close(lc);
 	}
 	for (argv += optind; *argv && (p = strchr(*argv, '=')); ++argv) {
 		if (env_verbosity)
