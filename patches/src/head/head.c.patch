--- head/head.c.orig	2021-04-09 02:24:12.000000000 +0200
+++ head/head.c	2021-06-12 06:22:35.084179943 +0200
@@ -43,10 +43,8 @@ static char sccsid[] = "@(#)head.c	8.2 (
 #include <sys/cdefs.h>
 __FBSDID("$FreeBSD$");
 
-#include <sys/capsicum.h>
 #include <sys/types.h>
 
-#include <capsicum_helpers.h>
 #include <ctype.h>
 #include <err.h>
 #include <errno.h>
@@ -57,9 +55,6 @@ __FBSDID("$FreeBSD$");
 #include <string.h>
 #include <unistd.h>
 
-#include <libcasper.h>
-#include <casper/cap_fileargs.h>
-
 /*
  * head - give the first few lines of a stream or of each of a set of files
  *
@@ -85,8 +80,6 @@ main(int argc, char *argv[])
 	char *ep;
 	off_t bytecnt;
 	int ch, first, linecnt, eval;
-	fileargs_t *fa;
-	cap_rights_t rights;
 
 	linecnt = -1;
 	eval = 0;
@@ -114,22 +107,13 @@ main(int argc, char *argv[])
 	argc -= optind;
 	argv += optind;
 
-	fa = fileargs_init(argc, argv, O_RDONLY, 0,
-	    cap_rights_init(&rights, CAP_READ, CAP_FSTAT, CAP_FCNTL), FA_OPEN);
-	if (fa == NULL)
-		err(1, "unable to init casper");
-
-	caph_cache_catpages();
-	if (caph_limit_stdio() < 0 || caph_enter_casper() < 0)
-		err(1, "unable to enter capability mode");
-
 	if (linecnt != -1 && bytecnt != -1)
 		errx(1, "can't combine line and byte counts");
 	if (linecnt == -1)
 		linecnt = 10;
 	if (*argv != NULL) {
 		for (first = 1; *argv != NULL; ++argv) {
-			if ((fp = fileargs_fopen(fa, *argv, "r")) == NULL) {
+			if ((fp = fopen(*argv, "r")) == NULL) {
 				warn("%s", *argv);
 				eval = 1;
 				continue;
@@ -150,17 +134,16 @@ main(int argc, char *argv[])
 	else
 		head_bytes(stdin, bytecnt);
 
-	fileargs_free(fa);
 	exit(eval);
 }
 
 static void
 head(FILE *fp, int cnt)
 {
-	char *cp;
-	size_t error, readlen;
+	char *cp = NULL;
+	size_t error, readlen = 0;
 
-	while (cnt != 0 && (cp = fgetln(fp, &readlen)) != NULL) {
+	while (cnt != 0 && getline(&cp, &readlen, fp) != -1) {
 		error = fwrite(cp, sizeof(char), readlen, stdout);
 		if (error != readlen)
 			err(1, "stdout");
