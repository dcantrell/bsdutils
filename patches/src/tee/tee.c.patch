--- tee/tee.c.orig	2021-04-09 02:24:12.000000000 +0200
+++ tee/tee.c	2021-06-12 06:22:35.176170846 +0200
@@ -43,11 +43,9 @@ static const char rcsid[] =
   "$FreeBSD$";
 #endif /* not lint */
 
-#include <sys/capsicum.h>
 #include <sys/stat.h>
 #include <sys/types.h>
 
-#include <capsicum_helpers.h>
 #include <err.h>
 #include <errno.h>
 #include <fcntl.h>
@@ -96,9 +94,6 @@ main(int argc, char *argv[])
 	if ((buf = malloc(BSIZE)) == NULL)
 		err(1, "malloc");
 
-	if (caph_limit_stdin() == -1 || caph_limit_stderr() == -1)
-		err(EXIT_FAILURE, "unable to limit stdio");
-
 	add(STDOUT_FILENO, "stdout");
 
 	for (exitval = 0; *argv; ++argv)
@@ -109,8 +104,6 @@ main(int argc, char *argv[])
 		} else
 			add(fd, *argv);
 
-	if (caph_enter() < 0)
-		err(EXIT_FAILURE, "unable to enter capability mode");
 	while ((rval = read(STDIN_FILENO, buf, BSIZE)) > 0)
 		for (p = head; p; p = p->next) {
 			n = rval;
@@ -140,16 +133,6 @@ static void
 add(int fd, const char *name)
 {
 	LIST *p;
-	cap_rights_t rights;
-
-	if (fd == STDOUT_FILENO) {
-		if (caph_limit_stdout() == -1)
-			err(EXIT_FAILURE, "unable to limit stdout");
-	} else {
-		cap_rights_init(&rights, CAP_WRITE, CAP_FSTAT);
-		if (caph_rights_limit(fd, &rights) < 0)
-			err(EXIT_FAILURE, "unable to limit rights");
-	}
 
 	if ((p = malloc(sizeof(LIST))) == NULL)
 		err(1, "malloc");
